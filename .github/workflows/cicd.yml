name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/*
      - hotfix/*
      - '*'
  pull_request:
    branches:
      - main

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest flask
      - name: Lint code
        run: flake8 . --max-line-length=88 --extend-ignore=E203
      - name: Run tests
        run: pytest tests/ --verbose

  create-pr:
    needs: lint_and_test
    if: startsWith(github.ref, 'refs/heads/feature/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create Pull Request to main
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }}
          base: main
          title: "Merge feature branch ${{ github.ref_name }} to main"
          body: "Automated PR for feature branch ${{ github.ref_name }} after linting and testing."

  build_and_push:
    runs-on: ubuntu-latest
    needs: lint_and_test
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/hotfix/')
    environment: production
    outputs:
      image_uri: ${{ steps.set_output.outputs.image_uri }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Configure Docker for Google Artifact Registry
        run: gcloud auth configure-docker
      - name: Build & push Docker image
        id: set_output
        run: |
          IMAGE_URI="us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/cicd-repo/${{ github.sha }}"
          echo "image_uri=$IMAGE_URI" >> $GITHUB_OUTPUT
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

  deploy:
    needs: build_and_push
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/hotfix/')
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy my-flask-app \
            --image "${{ needs.build_and_push.outputs.image_uri }}" \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated
